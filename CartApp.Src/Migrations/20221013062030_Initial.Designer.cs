// <auto-generated />
using System;
using CartService.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CartApp.Migrations
{
    [DbContext(typeof(CartAppDbContext))]
    [Migration("20221013062030_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("CartApp.DAL.Models.CartItemDAL", b =>
                {
                    b.Property<Guid>("CartId")
                        .HasColumnType("TEXT");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("CartId", "ItemId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("CartApp.DAL.Models.ItemDAL", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("ItemId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            ImageUrl = "https://picsum.photos/200/300",
                            Name = "iPhone 12",
                            Price = 50000m
                        },
                        new
                        {
                            ItemId = 2,
                            ImageUrl = "https://picsum.photos/200/300",
                            Name = "HP Laptop",
                            Price = 50000m
                        },
                        new
                        {
                            ItemId = 3,
                            ImageUrl = "https://picsum.photos/200/300",
                            Name = "Samsung S22 Ultra",
                            Price = 84000m
                        });
                });

            modelBuilder.Entity("CartItemDALItemDAL", b =>
                {
                    b.Property<int>("ItemDALItemId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CartItemDALCartId")
                        .HasColumnType("TEXT");

                    b.Property<int>("CartItemDALItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemDALItemId", "CartItemDALCartId", "CartItemDALItemId");

                    b.HasIndex("CartItemDALCartId", "CartItemDALItemId");

                    b.ToTable("CartItemDALItemDAL");
                });

            modelBuilder.Entity("CartItemDALItemDAL", b =>
                {
                    b.HasOne("CartApp.DAL.Models.ItemDAL", null)
                        .WithMany()
                        .HasForeignKey("ItemDALItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CartApp.DAL.Models.CartItemDAL", null)
                        .WithMany()
                        .HasForeignKey("CartItemDALCartId", "CartItemDALItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
